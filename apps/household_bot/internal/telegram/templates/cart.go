package templates

import (
	"fmt"

	"domain"
)

const (
	cartPreviewStartTemplate = "–í–æ—Ç —Ç–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞!\n–ü–æ–∑–∏—Ü–∏–π –≤ –∫–æ—Ä–∑–∏–Ω–µ: %d\n\n"
	cartPreviewEndTemplate   = "–ò—Ç–æ–≥–æ –≤ —Ä—É–±–ª—è—Ö: %d ‚ÇΩ\n\n" +
		"–¢—ã –≤—ã–±—Ä–∞–ª —Ç–æ–≤–∞—Ä(—ã) –ø–æ–¥ –∑–∞–∫–∞–∑, —Å —É—á–µ—Ç–æ–º —É–ø–∞–∫–æ–≤–∫–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã, " +
		"–¥–∞–ª—å–Ω–µ–π—à–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –¥—Ä—É–≥–∏–µ –≥–æ—Ä–æ–¥–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –≤ –¢–ö üåâ\n\n" +
		"–ì–æ—Ç–æ–≤ –∑–∞–∫–∞–∑–∞—Ç—å? –ñ–º–∏ –∫–Ω–æ–ø–∫—É!"
	positionPreviewTemplate = "%d. –ù–∞–∑–≤–∞–Ω–∏–µ: %s\n–¶–µ–Ω–∞: %d ‚ÇΩ\n–¶–µ–Ω–∞ –ø–æ —Ä—ã–Ω–∫—É: %d ‚ÇΩ\n–ù–∞–ª–∏—á–∏–µ: [todo?]\n–ê—Ä—Ç–∏–∫—É–ª: %s\n\n"

	editPositionTemplate = "–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ—ë üôÖ‚Äç‚ôÇÔ∏è\n\n–ü–æ –∫–ª–∏–∫—É –Ω–∞ " +
		"–∫–Ω–æ–ø–∫—É –ø–æ–∑–∏—Ü–∏—è –∏–∑—á–µ–∑–Ω–µ—Ç –∏–∑ —Ç–≤–æ–µ–π –∫–æ—Ä–∑–∏–Ω—ã!"

	tryToAddWithInvalidInStockTemplate = "–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä \"%s\", –Ω–æ –≤ —Ç–≤–æ–µ–π –∫–æ—Ä–∑–∏–Ω–µ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç " +
		"—Ç–æ–≤–∞—Ä \"%s\".\n\n–û—á–∏—Å—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ \"%s\"."
)

func TryAddWithInvalidInStock(actual, want bool) string {
	actualStr, wantStr := domain.InStockToString(actual), domain.InStockToString(want)
	return fmt.Sprintf(tryToAddWithInvalidInStockTemplate, actualStr, wantStr, wantStr)
}

type cartPositionArgs struct {
	n         int
	price     uint32
	priceGlob uint32
	name      string
	isbn      string
}

func EditCartPosition() string {
	return editPositionTemplate
}

func RenderCart(cart domain.HouseholdCart) string {
	start := _cartPreviewStartTemplate(len(cart))
	var total uint32
	for i, pos := range cart {
		start += _cartPositionTemplate(cartPositionArgs{
			n:         i + 1,
			price:     pos.Price,
			priceGlob: pos.PriceGlob,
			name:      pos.Name,
			isbn:      pos.ISBN,
		})
		total += pos.Price
	}
	return start + _cartPreviewEndTemplate(total)
}

func _cartPositionTemplate(args cartPositionArgs) string {
	return fmt.Sprintf(
		positionPreviewTemplate,
		args.n,
		args.name,
		args.price,
		args.priceGlob,
		args.isbn,
	)
}

func _cartPreviewEndTemplate(totalRub uint32) string {
	return fmt.Sprintf(cartPreviewEndTemplate, totalRub)
}

func _cartPreviewStartTemplate(numPositions int) string {
	return fmt.Sprintf(cartPreviewStartTemplate, numPositions)
}
