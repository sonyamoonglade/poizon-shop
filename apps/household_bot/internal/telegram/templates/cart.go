package templates

import (
	"fmt"

	"domain"
)

const (
	cartPreviewStartTemplate = "–í–æ—Ç —Ç–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞!\n–ü–æ–∑–∏—Ü–∏–π –≤ –∫–æ—Ä–∑–∏–Ω–µ: %d\n"
	cartPreviewEndTemplate   = "–ò—Ç–æ–≥–æ –≤ —Ä—É–±–ª—è—Ö: %d ‚ÇΩ\n\n" +
		"–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –ø–æ–∑–∏—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ú–æ—Å–∫–≤—ã\n\n---\n\n–ì–æ—Ç–æ–≤ –∑–∞–∫–∞–∑–∞—Ç—å? –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!"
	positionPreviewTemplate = "%d. name: %s\nprice: %d\n"

	editPositionTemplate = "–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ—ë üôÖ‚Äç‚ôÇÔ∏è\n\n–ü–æ –∫–ª–∏–∫—É –Ω–∞ " +
		"–∫–Ω–æ–ø–∫—É –ø–æ–∑–∏—Ü–∏—è –∏–∑—á–µ–∑–Ω–µ—Ç –∏–∑ —Ç–≤–æ–µ–π –∫–æ—Ä–∑–∏–Ω—ã!"

	tryToAddWithInvalidInStockTemplate = "–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä '%s', –Ω–æ –≤ –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" +
		"—Ç–æ–≤–∞—Ä '%s'.\n\n–û—á–∏—Å—Ç–∏—Ç–µ –∫–æ—Ä–∑–∏–Ω—É –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞—Ç–∞–ª–æ–≥ '%s'"
)

func TryAddWithInvalidInStock(actual, want bool) string {
	actualStr, wantStr := domain.InStockToString(actual), domain.InStockToString(want)
	return fmt.Sprintf(tryToAddWithInvalidInStockTemplate, actualStr, wantStr, wantStr)
}

type cartPositionArgs struct {
	n           int
	priceRub    uint32
	productName string
}

func EditCartPosition() string {
	return editPositionTemplate
}

func RenderCart(cart domain.HouseholdCart) string {
	start := _cartPreviewStartTemplate(len(cart))
	var total uint32
	for i, pos := range cart {
		start += _cartPositionTemplate(cartPositionArgs{
			n:           i + 1,
			priceRub:    pos.Price,
			productName: pos.Name,
		})
		total += pos.Price
	}
	return start + _cartPreviewEndTemplate(total)
}

func _cartPositionTemplate(args cartPositionArgs) string {
	return fmt.Sprintf(positionPreviewTemplate, args.n, args.productName, args.priceRub)
}

func _cartPreviewEndTemplate(totalRub uint32) string {
	return fmt.Sprintf(cartPreviewEndTemplate, totalRub)
}

func _cartPreviewStartTemplate(numPositions int) string {
	return fmt.Sprintf(cartPreviewStartTemplate, numPositions)
}
